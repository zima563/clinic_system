generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int      @id @default(autoincrement())
  email     String   @unique(map: "User_email_key")
  phone     String   @unique(map: "User_phone_key")
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userName  String
  isActive  Boolean  @default(true)
  isDeleted Boolean  @default(false)
}

model permission {
  id   Int    @id @default(autoincrement())
  name String @unique(map: "Permission_name_key")
}

model role {
  id        Int    @id @default(autoincrement())
  name      String @unique(map: "Role_name_key")
  createdBy Int

  @@index([createdBy], map: "Role_createdBy_fkey")
}

model service {
  id        Int      @id @default(autoincrement())
  title     String
  desc      String
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean  @default(false)
  img       String
  createdBy Int

  @@index([createdBy], map: "Service_createdBy_fkey")
}

model schedule {
  id         Int      @id @default(autoincrement())
  doctorId   Int
  servicesId Int
  price      Decimal  @db.Decimal(18, 2)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  createdBy  Int
  isDeleted  Boolean  @default(false)

  @@index([createdBy], map: "Schedule_createdBy_fkey")
  @@index([doctorId], map: "Schedule_doctorId_fkey")
  @@index([servicesId], map: "Schedule_servicesId_fkey")
}

model date {
  id         Int    @id @default(autoincrement())
  day        String
  fromTime   String
  toTime     String
  scheduleId Int

  @@index([scheduleId], map: "Date_scheduleId_fkey")
}

model specialty {
  id        Int      @id @default(autoincrement())
  title     String   @unique(map: "Specialty_title_key")
  icon      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy Int
  isDeleted Boolean  @default(false)

  @@index([createdBy], map: "Specialty_createdBy_fkey")
}

model invoice {
  id            Int            @id @default(autoincrement())
  rf            String         @unique(map: "Invoice_rf_key") @default(uuid())
  total         Decimal        @default(0.00) @db.Decimal(18, 2)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  ex            Boolean
  paymentMethod payment_Method @default(Cash)
  createdBy     Int

  @@index([createdBy], map: "Invoice_createdBy_fkey")
}

model doctor {
  id          Int      @id @default(autoincrement())
  name        String
  phone       String
  image       String
  isActive    Boolean  @default(true)
  specialtyId Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  info        String
  createdBy   Int
  isDeleted   Boolean  @default(false)

  @@index([createdBy], map: "Doctor_createdBy_fkey")
  @@index([specialtyId], map: "Doctor_specialtyId_fkey")
}

model patient {
  id             Int      @id @default(autoincrement())
  name           String
  phone          String   @unique(map: "Patient_phone_key")
  birthdate      DateTime
  gender         Gender
  medicalHistory String
  info           String
  invoiceId      Int?     @unique(map: "Patient_invoiceId_key")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  createdBy      Int
  isDeleted      Boolean  @default(false)

  @@index([createdBy], map: "Patient_createdBy_fkey")
}

model appointment {
  id         Int               @id @default(autoincrement())
  patientId  Int
  status     AppointmentStatus @default(pending)
  scheduleId Int
  dateId     Int
  dateTime   DateTime
  createdBy  Int

  @@index([createdBy], map: "Appointment_createdBy_fkey")
  @@index([dateId], map: "Appointment_dateId_fkey")
  @@index([patientId], map: "Appointment_patientId_fkey")
  @@index([scheduleId], map: "Appointment_scheduleId_fkey")
}

model visit {
  id            Int            @id @default(autoincrement())
  rf            String         @unique(map: "Visit_rf_key") @default(uuid())
  total         Decimal        @db.Decimal(18, 2)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  paymentMethod payment_Method @default(Cash)
  createdBy     Int

  @@index([createdBy], map: "Visit_createdBy_fkey")
}

model invoicedetail {
  id             Int      @id @default(autoincrement())
  invoiceId      Int
  description    String
  amount         Decimal  @db.Decimal(18, 2)
  createdAt      DateTime @default(now())
  updatedAt      DateTime
  visitDetailsId Int?
  createdBy      Int

  @@index([createdBy], map: "InvoiceDetail_createdBy_fkey")
  @@index([invoiceId], map: "InvoiceDetail_invoiceId_fkey")
  @@index([visitDetailsId], map: "InvoiceDetail_visitDetailsId_fkey")
}

model rolepermission {
  id           Int @id @default(autoincrement())
  permissionId Int
  roleId       Int

  @@index([permissionId], map: "RolePermission_permissionId_fkey")
  @@index([roleId], map: "RolePermission_roleId_fkey")
}

model userpermission {
  id           Int @id @default(autoincrement())
  permissionId Int
  userId       Int

  @@index([permissionId], map: "UserPermission_permissionId_fkey")
  @@index([userId], map: "UserPermission_userId_fkey")
}

model userrole {
  id     Int @id @default(autoincrement())
  roleId Int
  userId Int

  @@index([roleId], map: "UserRole_roleId_fkey")
  @@index([userId], map: "UserRole_userId_fkey")
}

model visitdetail {
  id         Int     @id @default(autoincrement())
  visitId    Int
  patientId  Int
  price      Decimal @db.Decimal(18, 2)
  scheduleId Int
  dateId     Int
  createdBy  Int

  @@index([createdBy], map: "VisitDetail_createdBy_fkey")
  @@index([dateId], map: "VisitDetail_dateId_fkey")
  @@index([patientId], map: "VisitDetail_patientId_fkey")
  @@index([scheduleId], map: "VisitDetail_scheduleId_fkey")
  @@index([visitId], map: "VisitDetail_visitId_fkey")
}

model visitinvoice {
  visitId   Int
  invoiceId Int
  createdBy Int

  @@id([visitId, invoiceId])
  @@index([createdBy], map: "VisitInvoice_createdBy_fkey")
  @@index([invoiceId], map: "VisitInvoice_invoiceId_fkey")
}

enum Gender {
  male
  female
}

enum AppointmentStatus {
  pending
  confirmed
  canceled
}

enum payment_Method {
  Cash
  Visa
  instaPay
  Wallet
  payPal
  CreditCard
}
